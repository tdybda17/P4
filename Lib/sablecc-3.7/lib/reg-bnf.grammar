Package Compiler.SableCC.postfix;

Helpers

    digit                     = ['0' .. '9'];
    digit_not_zero            = ['1' .. '9'];
    tab                       = 9;
    cr                        = 13;
    lf                        = 10;
    space                     = ' ';
    int_num                   = '0' | digit_not_zero (digit)*;

Tokens

    /* keywords */
    create                    = 'create';
    if                        = 'if';
    else                      = 'else';
    while                     = 'while';
    for                       = 'for';
    end                       = 'end';
    do                        = 'do';
    function                  = 'function';
    foreach                   = 'foreach';
    in                        = 'in';
    then                      = 'then';
    int                       = 'int';
    real                      = 'real';
    vertex                    = 'Vertex';
    edge                      = 'Edge';
    graph_type                = 'Graph' | 'WeightedGraph' | 'DiGraph' | 'WeightedDiGraph';
    bool_literal              = 'true' | 'false';


    /* operators */
    plus                      = '+';
    minus                     = '-';
    mult                      = '*';
    div                       = '/';
    equals                    = '==';
    assign                    = '=';
    v_connector               = '--';

    /* separators */
    lparen                    = '(';
    rparen                    = ')';
    lbracket                  = '{';
    rbracket                  = '}';
    newline                   = 10;  /* ASCII for '\n' */
    comma                     = ',';
    blank                     = space | tab;

    /* numbers */
    integer_literal           = int_num;
    real_literal              = int_num '.' (digit)*;

    /* identifier */
    id                        = '';


    /* comment */

    /* end of file */
    eof                       = '$';
    lambda                    = '?';

Ignored Tokens
    blank;

Productions

    prog =
        main funcs_dcl eof

    main =
        function main() newline block end

    block =
        block_content newline block |
        lambda

    block_content =
        dcl |
        stmt |
        lambda

    dcl =
        create ADT end |
        number_types id initialization

    initialization =
        assign expr |
        lambda

    ADT =
        graph_ADT |
        collection_type

    graph_ADT =
        graph_type id newline graph_dcl

    graph_dcl =
        graph_vertex_dcl newline graph_dcl1

    graph_dcl1 =
        graph_dcl |
        lambda

    graph_vertex_dcl =
        id -- graph_vertex_dcl1

    graph_vertex_dcl1 =
        {vertex_list} |
        idweight

    vertex_list =
        idweight vertex_list1

    vertex_list1 =
        , vertex_list |
        lambda

    weight =
        [arith_expr] |
        lambda






    expr =
        {factor} factor |
        {plus} expr plus factor |
        {minus} expr minus factor;


    factor =
        {term} term |
        {mult} factor mult term |
        {div} factor div term;


    term =
        {number} integer_literal |
        {expr} lparen expr rparen;