/* This file was generated by SableCC (http://www.sablecc.org/). */

package Compiler.SableCC.postfix.analysis;

import Compiler.SableCC.postfix.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAFactorExpr(AFactorExpr node);
    void caseAPlusExpr(APlusExpr node);
    void caseAMinusExpr(AMinusExpr node);
    void caseATermFactor(ATermFactor node);
    void caseAMultFactor(AMultFactor node);
    void caseADivFactor(ADivFactor node);
    void caseANumberTerm(ANumberTerm node);
    void caseAExprTerm(AExprTerm node);

    void caseTCreate(TCreate node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTFor(TFor node);
    void caseTEnd(TEnd node);
    void caseTDo(TDo node);
    void caseTFunction(TFunction node);
    void caseTForeach(TForeach node);
    void caseTIn(TIn node);
    void caseTThen(TThen node);
    void caseTInt(TInt node);
    void caseTReal(TReal node);
    void caseTVertex(TVertex node);
    void caseTEdge(TEdge node);
    void caseTBoolLiteral(TBoolLiteral node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTEquals(TEquals node);
    void caseTAssign(TAssign node);
    void caseTVConnector(TVConnector node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTNewline(TNewline node);
    void caseTComma(TComma node);
    void caseTBlank(TBlank node);
    void caseTIntegerLiteral(TIntegerLiteral node);
    void caseTRealLiteral(TRealLiteral node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
